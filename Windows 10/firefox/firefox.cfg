
lockPref("breakpad.reportURL", "");
lockPref("browser.tabs.crashReporting.sendReport", false);
lockPref("datareporting.healthreport.documentServerURI", "");
lockPref("datareporting.healthreport.service.enabled", false);
lockPref("datareporting.healthreport.uploadEnabled", false);
lockPref("datareporting.policy.dataSubmissionEnabled", false);
lockPref("datareporting.policy.dataSubmissionEnabled.v2", false); //      Firefox 43+ ?
lockPref("dom.ipc.plugins.flash.subprocess.crashreporter.enabled", false);
lockPref("dom.ipc.plugins.reportCrashURL", false);
lockPref("toolkit.telemetry.archive.enabled", false);
lockPref("toolkit.telemetry.cachedClientID", "");
lockPref("toolkit.telemetry.enabled", false);
lockPref("toolkit.telemetry.prompted", 2);
lockPref("toolkit.telemetry.rejected", true);
lockPref("toolkit.telemetry.server", "");
lockPref("toolkit.telemetry.unified", false);
lockPref("toolkit.telemetry.unifiedIsOptIn", true);
lockPref("toolkit.telemetry.optoutSample", false);
//      Disable sync
lockPref("identity.fxaccounts.auth.uri", "");
lockPref("identity.fxaccounts.remote.force_auth.uri", "");
lockPref("identity.fxaccounts.remote.signin.uri", "");
lockPref("identity.fxaccounts.remote.signup.uri", "");
lockPref("identity.fxaccounts.settings.uri", "");
lockPref("services.sync.autoconnect", false);
lockPref("services.sync.engine.addons", false);
lockPref("services.sync.engine.bookmarks", false);
lockPref("services.sync.engine.history", false);
lockPref("services.sync.engine.passwords", false);
lockPref("services.sync.engine.prefs", false);
lockPref("services.sync.engine.tabs", false);
lockPref("services.sync.serverURL", "");
//      Turn on Do not Track
lockPref("privacy.donottrackheader.enabled", true);
lockPref("privacy.donottrackheader.value", 1);
//      Disable features that have an impact on privacy
//      https://www.mozilla.org/en-US/firefox/geolocation/
lockPref("accessibility.typeaheadfind", false);
lockPref("geo.enabled", false);
lockPref("geo.wifi.logging.enabled", false);
lockPref("geo.wifi.uri", "");
lockPref("layout.spellcheckDefault", 0);
//      Disable certificate warning bypass
lockPref("browser.xul.error_pages.enabled", false);
//      Enable support for Content Security Policy
lockPref("security.csp.enable", true);
//      Disable Safe Browsing anti-malware
//      Safe Browsing communicates with a third party and leaks the browsing history and also sends metadata about the downloads made.
//      https://support.mozilla.org/en-US/kb/how-does-phishing-and-malware-protection-work
lockPref("browser.safebrowsing.enabled", false);
lockPref("browser.safebrowsing.downloads.enabled", false);
lockPref("browser.safebrowsing.malware.enabled", false);
//      Turn on XSS Filter
lockPref("browser.urlbar.filter.javascript", true);
//      Restrict third party cookies
lockPref("network.cookie.cookieBehavior", 1);
//      Enable Flash as it's in a sandbox
lockPref("plugin.state.flash", 2);
//      Disable Java unless required
lockPref("plugin.state.java", 0);
lockPref("plugin.state.npdeployjava1", 0);
//      Disable webcam and microphone unless necessary
lockPref("media.navigator.enabled", false);
lockPref("media.navigator.video.enabled", false);
//      Disable Firefox Hello
//      Firefox connects to third-party (Telefonica) servers without asking for permission.
//      https://support.mozilla.org/en-US/kb/firefox-hello-video-and-voice-conversations-online
lockPref("loop.enabled", false);
//      Optional configuration
//      Clear personal and temporary data on shutdown
lockPref("privacy.clearOnShutdown.cache", true);
lockPref("privacy.clearOnShutdown.cookies", true);
lockPref("privacy.clearOnShutdown.downloads", true);
lockPref("privacy.clearOnShutdown.formData", true);
lockPref("privacy.clearOnShutdown.history", true);
lockPref("privacy.clearOnShutdown.offlineApps", true);
lockPref("privacy.clearOnShutdown.openWindows", false);
lockPref("privacy.clearOnShutdown.passwords", true);
lockPref("privacy.clearOnShutdown.sessions", true);
lockPref("privacy.clearOnShutdown.siteprefs", true);
lockPref("privacy.clearOnShutdown.siteSettings", true);
lockPref("privacy.cpd.cache", true);
lockPref("privacy.cpd.cookies", true);
lockPref("privacy.cpd.downloads", true);
lockPref("privacy.cpd.formdata", true);
lockPref("privacy.cpd.history", true);
lockPref("privacy.cpd.offlineApps", true);
lockPref("privacy.cpd.openWindows", false);
lockPref("privacy.cpd.passwords", true);
lockPref("privacy.cpd.sessions", true);
lockPref("privacy.cpd.siteprefs", true);
lockPref("privacy.cpd.siteSettings", true);
lockPref("privacy.sanitize.sanitizeOnShutdown", true);
//      Prevent the use of SPDY, Websockets and WebRTC if not supported by the web proxy
//      https://wiki.mozilla.org/Media/WebRTC
lockPref("media.http.spdy.enabled", false);
lockPref("media.peerconnection.enabled", false);
lockPref("media.websocket.enabled", false);
lockPref("network.websocket.enabled", false);
//      Disable automatic form filling
lockPref("signon.autofillForms", false);
lockPref("signon.prefillForms", false);
lockPref("signon.rememberSignons", false);
//      Disable Pocket integration
//      https://support.mozilla.org/en-US/kb/save-web-pages-later-pocket-firefox
//      A third-party service (proprietary) for managing a reading list of articles.
//      For disabling the Pocket integration, please start by removing the "pocket" icon from the toolbar.
//      extensions.pocket.enabled:  https://github.com/auberginehill/firefox-customization-files/issues/1
//                                  https://snakerl.blogspot.com/2017/11/pocket-erweiterung-in-firefox-57.html
lockPref("browser.pocket.enabled", false);
lockPref("extensions.pocket.enabled", false);
//      Disable Firefox's new Screenshot tool (requires at least Firefox 55)
//      https://github.com/auberginehill/firefox-customization-files/issues/1
//      https://www.ghacks.net/2017/08/12/how-to-disable-firefoxs-new-screenshot-tool/
lockPref("extensions.screenshots.disabled", true);
//      Expire master password
lockPref("signon.expireMasterPassword", true);
//      Disable the version updated page
lockPref("browser.startup.homepage_override.mstone", "ignore");
//      Disable default browser check
lockPref("browser.shell.checkDefaultBrowser", false);
//      Set disk cache to 1MB
lockPref("browser.cache.disk.capacity", 1024);
lockPref("browser.cache.disk.smart_size.enabled", false);
lockPref("browser.cache.disk.smart_size.first_run", false);
lockPref("browser.cache.disk.smart_size.use_old_max", false);
//      Ideas (not enabled nor disabled)
//      Disable updates and notifications
// lockPref("app.update.auto", false);
// lockPref("app.update.autoUpdateEnabled", false);
// lockPref("app.update.enabled", false);
// lockPref("app.update.mode", 1);
// lockPref("app.update.service.enabled", false);
// lockPref("app.update.silent", true); // disables the update service UI?
// lockPref("update_notifications.enabled", false);
//      Disable unnecessary protocols
//      This disables older protocols that are known to be weak or entirely broken (3DES, RC4 and MD5).
// lockPref("security.ssl3.rsa_rc4_128_sha", false);
// lockPref("security.ssl3.rsa_rc4_128_md5", false);
// lockPref("security.ssl3.rsa_des_ede3_sha", false);
// lockPref("security.ssl3.ecdhe_ecdsa_rc4_128_sha", false);
// lockPref("security.ssl3.ecdhe_rsa_rc4_128_sha", false);
// lockPref("app.update.auto", false);
//      Disable device sensors
// lockPref("device.sensors.enabled", false);
// lockPref("camera.control.face_detection.enabled", false);
// lockPref("camera.control.autofocus_moving_callback.enabled", false);
//      Disable JavaScript fingerprinting and/or data collection
// lockPref("dom.event.clipboardevents.enabled", false);
// lockPref("dom.battery.enabled", false);
// lockPref("browser.send_pings", false);
// lockPref("webgl.disabled", false);
//      Disable search suggestions
// By default everything that is typed in the search box is sent to the search engine.
// If disabled, suggestions based on local history will still work.
// lockPref("browser.search.suggest.enabled", false);
//      Turn on tracking protection
// This makes Firefox block known tracking domains by default.
// lockPref("privacy.trackingprotection.enabled", true);

lockPref("network.http.phishy-userpass-length", 1);
lockPref("network.IDN_show_punycode", true);
lockPref("security.fileuri.strict_origin_policy", true);
lockPref("services.sync.enabled", false);
lockPref("media.peerconnection.enabled", false);
lockPref("media.peerconnection.use_document_iceservers", false);
lockPref("browser.ssl_override_behavior", 0);
lockPref("security.tls.version.max", 3);
lockPref("security.tls.version.min", 1);
lockPref("security.OCSP.enabled", 1);
lockPref("security.mixed_content.block_active_content", true);
lockPref("security.ocsp.require", true);
lockPref("dom.disable_window_status_change", true);
lockPref("security.xpconnect.plugin.unrestricted", false);
lockPref("dom.disable_window_open_feature.location", true);
lockPref("dom.disable_window_open_feature.status", true);
lockPref("dom.allow_scripts_to_close_windows", false);
lockPref("privacy.popups.policy", 1);
lockPref("browser.urlbar.filter.javascript", true);
lockPref("signon.rememberSignons", false);
lockPref("network.cookie.cookieBehavior", 1);
lockPref("privacy.donottrackheader.enabled", true);
lockPref("privacy.donottrackheader.value", 1);
lockPref("privacy.trackingprotection.enabled", true);
lockPref("privacy.trackingprotection.pbmode", true);
lockPref("security.dialog_enable_delay", 2000);
lockPref("geo.enabled", false);
lockPref("browser.helperApps.alwaysAsk.force", true);
lockPref("xpinstall.whitelist.required", true);
lockPref("extensions.blocklist.enabled", true);
lockPref("extensions.blocklist.interval", 86400);
lockPref("privacy.popups.disable_from_plugins", 2);
lockPref("extensions.update.autoUpdateDefault", true);
lockPref("extensions.update.enabled", true);
lockPref("extensions.update.interval", 86400);
lockPref("browser.download.manager.scanWhenDone", true);
lockPref("network.jar.open-unsafe-types", false);
lockPref("browser.safebrowsing.enabled", true);
lockPref("browser.safebrowsing.malware.enabled", true);
lockPref("dom.serviceWorkers.enabled", false);
lockPref("dom.webnotifications.enabled", false);
lockPref("dom.enable_performance",	false);
lockPref("dom.enable_user_timing",	false);
lockPref("dom.webaudio.enabled",	false);
lockPref("geo.enabled", false);
lockPref("geo.wifi.uri", "https://location.services.mozilla.com/v1/geolocate?key=%MOZILLA_API_KEY%");
lockPref("geo.wifi.logging.enabled", false);
lockPref("dom.mozTCPSocket.enabled",				false);
lockPref("dom.netinfo.enabled",				false);
lockPref("dom.network.enabled",				false);
lockPref("media.peerconnection.enabled",			false);
lockPref("media.peerconnection.ice.default_address_only",	true);
lockPref("media.peerconnection.ice.no_host",			true);
lockPref("media.navigator.enabled",				false);
lockPref("media.navigator.video.enabled",			false);
lockPref("media.getusermedia.screensharing.enabled",		false);
lockPref("media.getusermedia.audiocapture.enabled",		false);
lockPref("dom.battery.enabled",				false);
lockPref("dom.telephony.enabled",				false);
lockPref("beacon.enabled",					false);
lockPref("dom.event.clipboardevents.enabled",			false);
lockPref("dom.allow_cut_copy", false);
lockPref("media.webspeech.recognition.enable",			false);
lockPref("media.webspeech.synth.enabled",			false);
lockPref("browser.send_pings",					false);
lockPref("browser.send_pings.require_same_host",		true);
lockPref("dom.gamepad.enabled",				false);
lockPref("dom.vr.enabled",					false);
lockPref("dom.vibrator.enabled",           false);
lockPref("dom.enable_resource_timing",				false);
lockPref("dom.archivereader.enabled",				false);
lockPref("webgl.disabled",					true);
lockPref("webgl.min_capability_mode",				true);
lockPref("webgl.disable-extensions",				true);
lockPref("webgl.disable-fail-if-major-performance-caveat",	true);
lockPref("webgl.enable-debug-renderer-info",			false);
lockPref("dom.maxHardwareConcurrency",				2);
lockPref("javascript.options.wasm",				false);
lockPref("camera.control.face_detection.enabled",		false);
lockPref("browser.search.countryCode",				"US");
lockPref("browser.search.region",				"US");
lockPref("browser.search.geoip.url",				"");
lockPref("intl.accept_languages",				"en-US, en");
lockPref("intl.locale.matchOS",				false);
lockPref("browser.search.geoSpecificDefaults",			false);
lockPref("clipboard.autocopy",					false);
lockPref("javascript.use_us_english_locale",			true);
lockPref("keyword.enabled",					false);
lockPref("browser.urlbar.trimURLs",				false);
lockPref("browser.fixup.alternate.enabled",			false);
lockPref("browser.fixup.hide_user_pass", true);
lockPref("network.proxy.socks_remote_dns",			true);
lockPref("network.manage-offline-status",			false);
lockPref("security.mixed_content.block_active_content",	true);
lockPref("security.mixed_content.block_display_content",	true);
lockPref("network.jar.open-unsafe-types",			false);
lockPref("security.xpconnect.plugin.unrestricted",		false);
lockPref("security.fileuri.strict_origin_policy",		true);
lockPref("browser.urlbar.filter.javascript",			true);
lockPref("javascript.options.asmjs",				false);
lockPref("gfx.font_rendering.opentype_svg.enabled",		false);
lockPref("media.video_stats.enabled",				false);
lockPref("general.buildID.override",				"20100101");
lockPref("browser.startup.homepage_override.buildID",		"20100101");
lockPref("browser.display.use_document_fonts",			0);
lockPref("network.protocol-handler.warn-external-default",	true);
lockPref("network.protocol-handler.external.http",		false);
lockPref("network.protocol-handler.external.https",		false);
lockPref("network.protocol-handler.external.javascript",	false);
lockPref("network.protocol-handler.external.moz-extension",	false);
lockPref("network.protocol-handler.external.ftp",		false);
lockPref("network.protocol-handler.external.file",		false);
lockPref("network.protocol-handler.external.about",		false);
lockPref("network.protocol-handler.external.chrome",		false);
lockPref("network.protocol-handler.external.blob",		false);
lockPref("network.protocol-handler.external.data",		false);
lockPref("network.protocol-handler.expose-all",		false);
lockPref("network.protocol-handler.expose.http",		true);
lockPref("network.protocol-handler.expose.https",		true);
lockPref("network.protocol-handler.expose.javascript",		true);
lockPref("network.protocol-handler.expose.moz-extension",	true);
lockPref("network.protocol-handler.expose.ftp",		true);
lockPref("network.protocol-handler.expose.file",		true);
lockPref("network.protocol-handler.expose.about",		true);
lockPref("network.protocol-handler.expose.chrome",		true);
lockPref("network.protocol-handler.expose.blob",		true);
lockPref("network.protocol-handler.expose.data",		true);
lockPref("security.dialog_enable_delay",			1000);
lockPref("extensions.getAddons.cache.enabled",			false);
lockPref("lightweightThemes.update.enabled",			false);
lockPref("plugin.state.flash",					0);
lockPref("plugin.state.java",					0);
lockPref("dom.ipc.plugins.flash.subprocess.crashreporter.enabled",	false);
lockPref("dom.ipc.plugins.reportCrashURL",			false);
lockPref("browser.safebrowsing.blockedURIs.enabled", true);
lockPref("plugin.state.libgnome-shell-browser-plugin",		0);
lockPref("plugins.click_to_play",				true);
lockPref("extensions.update.enabled",				true);
lockPref("extensions.blocklist.enabled",			true);
lockPref("services.blocklist.update_enabled",			true);
lockPref("extensions.blocklist.url",				"https://blocklist.addons.mozilla.org/blocklist/3/%APP_ID%/%APP_VERSION%/");
lockPref("extensions.systemAddon.update.enabled",		false);
lockPref("browser.newtabpage.activity-stream.asrouter.userprefs.cfr",	false);
lockPref("devtools.webide.enabled",				false);
lockPref("devtools.webide.autoinstallADBHelper",		false);
lockPref("devtools.webide.autoinstallFxdtAdapters",		false);
lockPref("devtools.debugger.remote-enabled",			false);
lockPref("devtools.chrome.enabled",				false);
lockPref("devtools.debugger.force-local",			true);
lockPref("toolkit.telemetry.enabled",				false);
lockPref("toolkit.telemetry.unified",				false);
lockPref("toolkit.telemetry.archive.enabled",			false);
lockPref("experiments.supported",				false);
lockPref("experiments.enabled",				false);
lockPref("experiments.manifest.uri",				"");
lockPref("network.allow-experiments",				false);
lockPref("breakpad.reportURL",					"");
lockPref("browser.tabs.crashReporting.sendReport",		false);
lockPref("browser.crashReports.unsubmittedCheck.enabled",	false);
lockPref("dom.flyweb.enabled",					false);
lockPref("browser.uitour.enabled",				false);
lockPref("privacy.trackingprotection.enabled",			true);
lockPref("privacy.trackingprotection.pbmode.enabled",		true);
lockPref("privacy.userContext.enabled",			true);
lockPref("privacy.resistFingerprinting",			true);
lockPref("privacy.resistFingerprinting.block_mozAddonManager", true);
lockPref("extensions.webextensions.restrictedDomains", "");
lockPref("browser.startup.blankWindow", false);
lockPref("pdfjs.disabled",					true);
lockPref("datareporting.healthreport.uploadEnabled",		false);
lockPref("datareporting.healthreport.service.enabled",		false);
lockPref("datareporting.policy.dataSubmissionEnabled",		false);
lockPref("browser.discovery.enabled",				false);
lockPref("app.normandy.enabled", false);
lockPref("app.normandy.api_url", "");
lockPref("extensions.shield-recipe-client.enabled",		false);
lockPref("app.shield.optoutstudies.enabled",			false);
lockPref("loop.logDomains",					false);
lockPref("app.update.auto",					true);
lockPref("app.update.enabled",                 true);
lockPref("browser.safebrowsing.enabled",			true);
lockPref("browser.safebrowsing.phishing.enabled",		true);
lockPref("browser.safebrowsing.malware.enabled",		true);
lockPref("browser.safebrowsing.downloads.remote.enabled",	false);
lockPref("browser.pocket.enabled",				false);
lockPref("extensions.pocket.enabled",				false);
lockPref("browser.newtabpage.activity-stream.feeds.section.topstories",	false);
lockPref("network.prefetch-next",				false);
lockPref("network.dns.disablePrefetch",			true);
lockPref("network.dns.disablePrefetchFromHTTPS",		true);
lockPref("network.predictor.enabled",				false);
lockPref("network.dns.blockDotOnion",				true);
lockPref("browser.search.suggest.enabled",			false);
lockPref("browser.urlbar.suggest.searches",			false);
lockPref("browser.urlbar.suggest.history",			false);
lockPref("browser.casting.enabled",				false);
lockPref("media.gmp-gmpopenh264.enabled",			false);
lockPref("media.gmp-manager.url",				"");
lockPref("network.http.speculative-parallel-limit",		0);
lockPref("browser.aboutHomeSnippets.updateUrl",		"");
lockPref("browser.search.update",				false);
lockPref("network.captive-portal-service.enabled",		false);
lockPref("network.negotiate-auth.allow-insecure-ntlm-v1",	false);
lockPref("security.csp.experimentalEnabled",			true);
lockPref("security.csp.enable",				true);
lockPref("security.sri.enable",				true);
lockPref("network.http.referer.XOriginPolicy",		2);
lockPref("network.cookie.cookieBehavior",			1);
lockPref("privacy.firstparty.isolate",				true);
lockPref("network.cookie.thirdparty.sessionOnly",		true);
lockPref("browser.privatebrowsing.autostart",			true);
lockPref("browser.cache.offline.enable",			false);
lockPref("privacy.sanitize.sanitizeOnShutdown",		true);
lockPref("privacy.clearOnShutdown.cache",			true);
lockPref("privacy.clearOnShutdown.cookies",			true);
lockPref("privacy.clearOnShutdown.downloads",			true);
lockPref("privacy.clearOnShutdown.formdata",			true);
lockPref("privacy.clearOnShutdown.history",			true);
lockPref("privacy.clearOnShutdown.offlineApps",		true);
lockPref("privacy.clearOnShutdown.sessions",			true);
lockPref("privacy.clearOnShutdown.openWindows",		true);
lockPref("privacy.sanitize.timeSpan",				0);
lockPref("privacy.cpd.offlineApps",				true);
lockPref("privacy.cpd.cache",					true);
lockPref("privacy.cpd.cookies",				true);
lockPref("privacy.cpd.downloads",				true);
lockPref("privacy.cpd.formdata",				true);
lockPref("privacy.cpd.history",				true);
lockPref("privacy.cpd.sessions",				true);
lockPref("places.history.enabled",				false);
lockPref("browser.cache.disk.enable",				false);
lockPref("browser.cache.disk_cache_ssl",			false);
lockPref("browser.download.manager.retention",			0);
lockPref("signon.rememberSignons",				false);
lockPref("browser.formfill.enable",				false);
lockPref("network.cookie.lifetimePolicy",			2);
lockPref("signon.autofillForms",				false);
lockPref("signon.formlessCapture.enabled",			false);
lockPref("signon.autofillForms.http",				false);
lockPref("security.insecure_field_warning.contextual.enabled", true);
lockPref("browser.formfill.expire_days",			0);
lockPref("browser.sessionstore.privacy_level",			2);
lockPref("browser.helperApps.deleteTempFileOnExit",		true);
lockPref("browser.pagethumbnails.capturing_disabled",		true);
lockPref("browser.shell.shortcutFavicons",					false);
lockPref("browser.bookmarks.max_backups", 0);
lockPref("security.insecure_password.ui.enabled",		true);
lockPref("browser.download.folderList",			2);
lockPref("browser.download.useDownloadDir",			false);
lockPref("browser.newtabpage.enabled",				false);
lockPref("browser.newtab.url",					"about:blank");
lockPref("browser.newtabpage.activity-stream.feeds.snippets",	false);
lockPref("browser.newtabpage.activity-stream.enabled",		false);
lockPref("browser.newtabpage.enhanced",			false);
lockPref("browser.newtab.preload",				false);
lockPref("browser.newtabpage.directory.ping",			"");
lockPref("browser.newtabpage.directory.source",		"data:text/plain,{}");
lockPref("plugins.update.notifyUser",				true);
lockPref("network.IDN_show_punycode",				true);
lockPref("browser.urlbar.autoFill",				false);
lockPref("browser.urlbar.autoFill.typed",			false);
lockPref("layout.css.visited_links_enabled",			false);
lockPref("browser.urlbar.autocomplete.enabled",		false);
lockPref("browser.shell.checkDefaultBrowser",			false);
lockPref("security.ask_for_password",				2);
lockPref("security.password_lifetime",				1);
lockPref("browser.offline-apps.notify",			true);
lockPref("network.stricttransportsecurity.preloadlist",	true);
lockPref("security.OCSP.enabled",				1);
lockPref("security.ssl.enable_ocsp_stapling",			true);
lockPref("security.ssl.enable_ocsp_must_staple",		true);
lockPref("security.OCSP.require",				true);
lockPref("security.ssl.disable_session_identifiers",		true);
lockPref("security.tls.version.min",				1);
lockPref("security.tls.version.max",				4);
lockPref("security.tls.version.fallback-limit",		3);
lockPref("security.cert_pinning.enforcement_level",		2);
lockPref("security.pki.sha1_enforcement_level",		1);
lockPref("security.ssl.treat_unsafe_negotiation_as_broken",	true);
lockPref("security.ssl.errorReporting.automatic",		false);
lockPref("browser.ssl_override_behavior",			1);
lockPref("network.security.esni.enabled",			true);
lockPref("security.ssl3.rsa_null_sha",				false);
lockPref("security.ssl3.rsa_null_md5",				false);
lockPref("security.ssl3.ecdhe_rsa_null_sha",			false);
lockPref("security.ssl3.ecdhe_ecdsa_null_sha",			false);
lockPref("security.ssl3.ecdh_rsa_null_sha",			false);
lockPref("security.ssl3.ecdh_ecdsa_null_sha",			false);
lockPref("security.ssl3.rsa_seed_sha",				false);
lockPref("security.ssl3.rsa_rc4_40_md5",			false);
lockPref("security.ssl3.rsa_rc2_40_md5",			false);
lockPref("security.ssl3.rsa_1024_rc4_56_sha",			false);
lockPref("security.ssl3.rsa_camellia_128_sha",			false);
lockPref("security.ssl3.ecdhe_rsa_aes_128_sha",		false);
lockPref("security.ssl3.ecdhe_ecdsa_aes_128_sha",		false);
lockPref("security.ssl3.ecdh_rsa_aes_128_sha",			false);
lockPref("security.ssl3.ecdh_ecdsa_aes_128_sha",		false);
lockPref("security.ssl3.dhe_rsa_camellia_128_sha",		false);
lockPref("security.ssl3.dhe_rsa_aes_128_sha",			false);
lockPref("security.ssl3.ecdh_ecdsa_rc4_128_sha",		false);
lockPref("security.ssl3.ecdh_rsa_rc4_128_sha",			false);
lockPref("security.ssl3.ecdhe_ecdsa_rc4_128_sha",		false);
lockPref("security.ssl3.ecdhe_rsa_rc4_128_sha",		false);
lockPref("security.ssl3.rsa_rc4_128_md5",			false);
lockPref("security.ssl3.rsa_rc4_128_sha",			false);
lockPref("security.tls.unrestricted_rc4_fallback",		false);
lockPref("security.ssl3.dhe_dss_des_ede3_sha",			false);
lockPref("security.ssl3.dhe_rsa_des_ede3_sha",			false);
lockPref("security.ssl3.ecdh_ecdsa_des_ede3_sha",		false);
lockPref("security.ssl3.ecdh_rsa_des_ede3_sha",		false);
lockPref("security.ssl3.ecdhe_ecdsa_des_ede3_sha",		false);
lockPref("security.ssl3.ecdhe_rsa_des_ede3_sha",		false);
lockPref("security.ssl3.rsa_des_ede3_sha",			false);
lockPref("security.ssl3.rsa_fips_des_ede3_sha",		false);
lockPref("security.ssl3.ecdh_rsa_aes_256_sha",			false);
lockPref("security.ssl3.ecdh_ecdsa_aes_256_sha",		false);
lockPref("security.ssl3.rsa_camellia_256_sha",			false);
lockPref("security.ssl3.ecdhe_ecdsa_aes_128_gcm_sha256",	true);
lockPref("security.ssl3.ecdhe_rsa_aes_128_gcm_sha256",		true);
lockPref("security.ssl3.ecdhe_ecdsa_chacha20_poly1305_sha256",	true);
lockPref("security.ssl3.ecdhe_rsa_chacha20_poly1305_sha256",	true);
lockPref("security.ssl3.dhe_rsa_camellia_256_sha",		false);
lockPref("security.ssl3.dhe_rsa_aes_256_sha",			false);
lockPref("security.ssl3.dhe_dss_aes_128_sha",			false);
lockPref("security.ssl3.dhe_dss_aes_256_sha",			false);
lockPref("security.ssl3.dhe_dss_camellia_128_sha",		false);
lockPref("security.ssl3.dhe_dss_camellia_256_sha",		false);
lockPref("security.ssl3.rsa_aes_256_sha",			false);
lockPref("security.ssl3.rsa_aes_128_sha",			false);
lockPref("security.ssl3.ecdhe_rsa_aes_256_sha",		false);
lockPref("security.ssl3.ecdhe_ecdsa_aes_256_sha",		false);
lockPref("security.ssl.require_safe_negotiation", true);
lockPref("dom.disable_beforeunload", true);
lockPref("dom.event.contextmenu.enabled", false);
lockPref("browser.bookmarks.file",	'/path/to/bookmarks-export.html');
lockPref("browser.bookmarks.autoExportHTML", true);
lockPref("signon.storeWhenAutocompleteOff", false);
lockPref("browser.cache.memory.enable", false);
lockPref("general.oscpu.override",	"Windows NT 6.1");
lockPref("general.platform.override", "Win32");
lockPref("general.appversion.override", "5.0 (Windows)");
lockPref("general.appname.override",	"Netscape");
lockPref("general.useragent.override",	"Mozilla/5.0 (Windows NT 6.1; rv:45.0) Gecko/20100101 Firefox/45.0");
lockPref("network.http.referer.spoofSource",	true);
lockPref("privacy.donottrackheader.enabled",		true);
lockPref("network.negotiate-auth.allow-insecure-ntlm-v1-https",		false);
lockPref("network.http.keep-alive.timeout",			15);
lockPref("loop.enabled",		false);
lockPref("privacy.resistFingerprinting.letterboxing.dimensions", "800x600, 1000x1000, 1600x900");
lockPref("privacy.resistFingerprinting.letterboxing", true);
lockPref("network.trr.mode",					0);
lockPref("media.gmp-provider.enabled",		false);
lockPref("xpinstall.signatures.required",		true);
lockPref("svg.disabled", true);
lockPref("pdfjs.enableWebGL",					false);
lockPref("dom.indexedDB.enabled",		false);
lockPref("dom.storage.enabled",		false);
lockPref("_user.js.parrot", "START: Oh yes, the Norwegian Blue... what's wrong with it?");
lockPref("general.warnOnAboutConfig", false); // XUL/XHTML version
lockPref("browser.aboutConfig.showWarning", false); // HTML version [FF71+]
lockPref("_user.js.parrot", "0100 syntax error: the parrot's dead!");
lockPref("browser.shell.checkDefaultBrowser", false);
lockPref("browser.startup.page", 0);
lockPref("browser.startup.homepage", "about:blank");
lockPref("browser.newtabpage.enabled", false);
lockPref("browser.newtab.preload", false);
lockPref("browser.newtabpage.activity-stream.feeds.telemetry", false);
lockPref("browser.newtabpage.activity-stream.telemetry", false);
lockPref("browser.newtabpage.activity-stream.feeds.snippets", false);
lockPref("browser.newtabpage.activity-stream.asrouter.providers.snippets", "{}");
lockPref("browser.newtabpage.activity-stream.feeds.section.topstories", false);
lockPref("browser.newtabpage.activity-stream.section.highlights.includePocket", false);
lockPref("browser.newtabpage.activity-stream.showSponsored", false);
lockPref("browser.newtabpage.activity-stream.feeds.discoverystreamfeed", false); // [FF66+]
lockPref("browser.newtabpage.activity-stream.default.sites", "");
lockPref("_user.js.parrot", "0200 syntax error: the parrot's definitely deceased!");
lockPref("geo.provider.network.url", "https://location.services.mozilla.com/v1/geolocate?key=%MOZILLA_API_KEY%");
lockPref("geo.provider.ms-windows-location", false); // [WINDOWS]
lockPref("geo.provider.use_corelocation", false); // [MAC]
lockPref("geo.provider.use_gpsd", false); // [LINUX]
lockPref("browser.region.network.url", ""); // [FF78+]
lockPref("browser.region.update.enabled", false); // [[FF79+]
lockPref("intl.accept_languages", "en-US, en");
lockPref("javascript.use_us_english_locale", true); // [HIDDEN PREF]
lockPref("_user.js.parrot", "0300 syntax error: the parrot's not pinin' for the fjords!");
lockPref("app.update.auto", false);
lockPref("browser.search.update", false);
lockPref("dom.ipc.plugins.flash.subprocess.crashreporter.enabled", false);
lockPref("dom.ipc.plugins.reportCrashURL", false);
lockPref("extensions.getAddons.showPane", false); // [HIDDEN PREF]
lockPref("extensions.htmlaboutaddons.recommendations.enabled", false);
lockPref("toolkit.telemetry.unified", false);
lockPref("toolkit.telemetry.enabled", false); // see [NOTE] above FF58+
lockPref("toolkit.telemetry.server", "data:,");
lockPref("toolkit.telemetry.archive.enabled", false);
lockPref("toolkit.telemetry.newProfilePing.enabled", false); // [FF55+]
lockPref("toolkit.telemetry.shutdownPingSender.enabled", false); // [FF55+]
lockPref("toolkit.telemetry.updatePing.enabled", false); // [FF56+]
lockPref("toolkit.telemetry.bhrPing.enabled", false); // [FF57+] Background Hang Reporter
lockPref("toolkit.telemetry.firstShutdownPing.enabled", false); // [FF57+]
lockPref("toolkit.telemetry.coverage.opt-out", true); // [HIDDEN PREF]
lockPref("toolkit.coverage.opt-out", true); // [FF64+] [HIDDEN PREF]
lockPref("toolkit.coverage.endpoint.base", "");
lockPref("datareporting.healthreport.uploadEnabled", false);
lockPref("datareporting.policy.dataSubmissionEnabled", false);
lockPref("app.shield.optoutstudies.enabled", false);
lockPref("browser.discovery.enabled", false);
lockPref("breakpad.reportURL", "");
lockPref("browser.tabs.crashReporting.sendReport", false); // [FF44+]
lockPref("browser.crashReports.unsubmittedCheck.enabled", false); // [FF51+]
lockPref("browser.crashReports.unsubmittedCheck.autoSubmit2", false); // [FF58+]
lockPref("captivedetect.canonicalURL", "");
lockPref("network.captive-portal-service.enabled", false); // [FF52+]
lockPref("network.connectivity-service.enabled", false);
lockPref("_user.js.parrot", "0400 syntax error: the parrot's passed on!");
lockPref("extensions.blocklist.enabled", true); // [DEFAULT: true]
lockPref("browser.safebrowsing.downloads.remote.enabled", false);
lockPref("browser.safebrowsing.downloads.remote.url", "");
lockPref("_user.js.parrot", "0500 syntax error: the parrot's cashed in 'is chips!");
lockPref("app.normandy.enabled", false);
lockPref("app.normandy.api_url", "");
lockPref("extensions.systemAddon.update.enabled", false); // [FF62+]
lockPref("extensions.systemAddon.update.url", ""); // [FF44+]
lockPref("browser.ping-centre.telemetry", false);
lockPref("extensions.formautofill.addresses.enabled", false); // [FF55+]
lockPref("extensions.formautofill.available", "off"); // [FF56+]
lockPref("extensions.formautofill.creditCards.available", false); // [FF57+]
lockPref("extensions.formautofill.creditCards.enabled", false); // [FF56+]
lockPref("extensions.formautofill.heuristics.enabled", false); // [FF55+]
lockPref("extensions.webcompat-reporter.enabled", false);
lockPref("_user.js.parrot", "0600 syntax error: the parrot's no more!");
lockPref("network.prefetch-next", false);
lockPref("network.dns.disablePrefetch", true);
lockPref("network.dns.disablePrefetchFromHTTPS", true); // [DEFAULT: true]
lockPref("network.predictor.enabled", false);
lockPref("network.predictor.enable-prefetch", false); // [FF48+]
lockPref("network.http.speculative-parallel-limit", 0);
lockPref("browser.send_pings", false); // [DEFAULT: false]
lockPref("browser.send_pings.require_same_host", true); // defense-in-depth
lockPref("_user.js.parrot", "0700 syntax error: the parrot's given up the ghost!");
lockPref("network.dns.disableIPv6", true);
lockPref("network.http.altsvc.enabled", false);
lockPref("network.http.altsvc.oe", false);
lockPref("network.proxy.socks_remote_dns", true);
lockPref("network.file.disable_unc_paths", true); // [HIDDEN PREF]
lockPref("network.gio.supported-protocols", ""); // [HIDDEN PREF]
lockPref("_user.js.parrot", "0800 syntax error: the parrot's ceased to be!");
lockPref("keyword.enabled", false);
lockPref("browser.fixup.alternate.enabled", false);
lockPref("browser.urlbar.trimURLs", false);
lockPref("layout.css.visited_links_enabled", false);
lockPref("browser.search.suggest.enabled", false);
lockPref("browser.urlbar.suggest.searches", false);
lockPref("browser.urlbar.speculativeConnect.enabled", false);
lockPref("browser.urlbar.dnsResolveSingleWordsAfterSearch", 0);
lockPref("browser.formfill.enable", false);
lockPref("browser.taskbar.lists.enabled", false);
lockPref("browser.taskbar.lists.frequent.enabled", false);
lockPref("browser.taskbar.lists.recent.enabled", false);
lockPref("browser.taskbar.lists.tasks.enabled", false);
lockPref("browser.taskbar.previews.enable", false);
lockPref("_user.js.parrot", "0900 syntax error: the parrot's expired!");
lockPref("security.ask_for_password", 2);
lockPref("security.password_lifetime", 5);
lockPref("signon.autofillForms", false);
lockPref("signon.formlessCapture.enabled", false);
lockPref("network.auth.subresource-http-auth-allow", 1);
lockPref("_user.js.parrot", "1000 syntax error: the parrot's gone to meet 'is maker!");
lockPref("browser.cache.disk.enable", false);
lockPref("browser.privatebrowsing.forceMediaMemoryCache", true); // [FF75+]
lockPref("media.memory_cache_max_size", 65536);
lockPref("browser.sessionstore.privacy_level", 2);
lockPref("browser.sessionstore.interval", 30000);
lockPref("toolkit.winRegisterApplicationRestart", false);
lockPref("browser.shell.shortcutFavicons", false);
lockPref("_user.js.parrot", "1200 syntax error: the parrot's a stiff!");
lockPref("security.ssl.require_safe_negotiation", true);
lockPref("security.tls.version.enable-deprecated", false);
lockPref("security.ssl.disable_session_identifiers", true); // [HIDDEN PREF]
lockPref("security.ssl.errorReporting.automatic", false);
lockPref("security.ssl.errorReporting.enabled", false);
lockPref("security.ssl.errorReporting.url", "");
lockPref("security.tls.enable_0rtt_data", false);
lockPref("security.ssl.enable_ocsp_stapling", true);
lockPref("security.OCSP.enabled", 1);
lockPref("security.OCSP.require", true);
lockPref("security.pki.sha1_enforcement_level", 1);
lockPref("security.family_safety.mode", 0);
lockPref("security.cert_pinning.enforcement_level", 2);
lockPref("security.remote_settings.crlite_filters.enabled", true);
lockPref("security.pki.crlite_mode", 2);
lockPref("security.mixed_content.block_active_content", true); // [DEFAULT: true]
lockPref("security.mixed_content.block_display_content", true);
lockPref("security.mixed_content.block_object_subrequest", true);
lockPref("dom.security.https_only_mode", true); // [FF76+]
lockPref("dom.security.https_only_mode_send_http_background_request", false);
lockPref("security.ssl.treat_unsafe_negotiation_as_broken", true);
lockPref("browser.ssl_override_behavior", 1);
lockPref("browser.xul.error_pages.expert_bad_cert", true);
lockPref("security.insecure_connection_text.enabled", true); // [FF60+]
lockPref("_user.js.parrot", "1400 syntax error: the parrot's bereft of life!");
lockPref("gfx.font_rendering.opentype_svg.enabled", false);
lockPref("gfx.font_rendering.graphite.enabled", false);
lockPref("_user.js.parrot", "1600 syntax error: the parrot rests in peace!");
lockPref("network.http.referer.XOriginPolicy", 1);
lockPref("network.http.referer.XOriginTrimmingPolicy", 0); // [DEFAULT: 0]
lockPref("network.http.referer.hideOnionSource", true);
lockPref("privacy.donottrackheader.enabled", true);
lockPref("_user.js.parrot", "1700 syntax error: the parrot's bit the dust!");
lockPref("privacy.userContext.ui.enabled", true);
lockPref("privacy.userContext.enabled", true);
lockPref("_user.js.parrot", "1800 syntax error: the parrot's pushing up daisies!");
lockPref("plugin.state.flash", 0);
lockPref("media.gmp-widevinecdm.visible", false);
lockPref("media.gmp-widevinecdm.enabled", false);
lockPref("media.eme.enabled", false);
lockPref("_user.js.parrot", "2000 syntax error: the parrot's snuffed it!");
lockPref("media.peerconnection.enabled", false);
lockPref("media.peerconnection.ice.default_address_only", true);
lockPref("media.peerconnection.ice.no_host", true); // [FF51+]
lockPref("media.peerconnection.ice.proxy_only_if_behind_proxy", true); // [FF70+]
lockPref("webgl.disabled", true);
lockPref("webgl.enable-webgl2", false);
lockPref("webgl.min_capability_mode", true);
lockPref("webgl.disable-fail-if-major-performance-caveat", true);
lockPref("media.getusermedia.screensharing.enabled", false);
lockPref("media.getusermedia.browser.enabled", false);
lockPref("media.getusermedia.audiocapture.enabled", false);
lockPref("media.autoplay.blocking_policy", 2);
lockPref("_user.js.parrot", "2200 syntax error: the parrot's 'istory!");
lockPref("dom.disable_window_move_resize", true);
lockPref("browser.link.open_newwindow", 3); // 1=most recent window or tab 2=new window, 3=new tab
lockPref("browser.link.open_newwindow.restriction", 0);
lockPref("dom.disable_open_during_load", true);
lockPref("dom.popup_allowed_events", "click dblclick");
lockPref("_user.js.parrot", "2300 syntax error: the parrot's off the twig!");
lockPref("dom.serviceWorkers.enabled", false);
lockPref("dom.push.enabled", false);
lockPref("_user.js.parrot", "2400 syntax error: the parrot's kicked the bucket!");
lockPref("dom.allow_cut_copy", false);
lockPref("dom.disable_beforeunload", true);
lockPref("dom.vibrator.enabled", false);
lockPref("javascript.options.asmjs", false);
lockPref("javascript.options.wasm", false);
lockPref("dom.targetBlankNoOpener.enabled", true);
lockPref("_user.js.parrot", "2500 syntax error: the parrot's shuffled off 'is mortal coil!");
lockPref("media.navigator.enabled", false);
lockPref("dom.webaudio.enabled", false);
lockPref("_user.js.parrot", "2600 syntax error: the parrot's run down the curtain!");
lockPref("accessibility.force_disabled", 1);
lockPref("beacon.enabled", false);
lockPref("browser.helperApps.deleteTempFileOnExit", true);
lockPref("browser.pagethumbnails.capturing_disabled", true); // [HIDDEN PREF]
lockPref("browser.uitour.enabled", false);
lockPref("browser.uitour.url", "");
lockPref("devtools.chrome.enabled", false);
lockPref("devtools.debugger.remote-enabled", false); // [DEFAULT: false]
lockPref("middlemouse.contentLoadURL", false);
lockPref("network.http.redirection-limit", 10);
lockPref("permissions.manager.defaultsUrl", "");
lockPref("webchannel.allowObject.urlWhitelist", "");
lockPref("network.IDN_show_punycode", true);
lockPref("pdfjs.disabled", false); // [DEFAULT: false]
lockPref("network.protocol-handler.external.ms-windows-store", false);
lockPref("browser.display.use_system_colors", false); // [DEFAULT: false]
lockPref("permissions.delegation.enabled", false);
lockPref("privacy.window.name.update.enabled", true);
lockPref("browser.download.useDownloadDir", false);
lockPref("browser.download.manager.addToRecentDocs", false);
lockPref("browser.download.hide_plugins_without_extensions", false);
lockPref("extensions.enabledScopes", 5); // [HIDDEN PREF]
lockPref("extensions.autoDisableScopes", 15); // [DEFAULT: 15]
lockPref("security.csp.enable", true); // [DEFAULT: true]
lockPref("security.dialog_enable_delay", 700);
lockPref("_user.js.parrot", "2700 syntax error: the parrot's joined the bleedin' choir invisible!");
lockPref("network.cookie.cookieBehavior", 1);
lockPref("browser.contentblocking.category", "custom");
lockPref("network.cookie.thirdparty.sessionOnly", true);
lockPref("network.cookie.thirdparty.nonsecureSessionOnly", true); // [FF58+]
lockPref("browser.cache.offline.storage.enable", false); // [FF71+] [DEFAULT: false FF84+]
lockPref("dom.storage.next_gen", true);
lockPref("_user.js.parrot", "2800 syntax error: the parrot's bleedin' demised!");
lockPref("privacy.sanitize.sanitizeOnShutdown", true);
lockPref("privacy.clearOnShutdown.cache", true);
lockPref("privacy.clearOnShutdown.cookies", true);
lockPref("privacy.clearOnShutdown.downloads", true); // see note above
lockPref("privacy.clearOnShutdown.formdata", true); // Form & Search History
lockPref("privacy.clearOnShutdown.history", true); // Browsing & Download History
lockPref("privacy.clearOnShutdown.offlineApps", true); // Offline Website Data
lockPref("privacy.clearOnShutdown.sessions", true); // Active Logins
lockPref("privacy.clearOnShutdown.siteSettings", false); // Site Preferences
lockPref("privacy.cpd.cache", true);
lockPref("privacy.cpd.cookies", true);
lockPref("privacy.cpd.formdata", true); // Form & Search History
lockPref("privacy.cpd.history", true); // Browsing & Download History
lockPref("privacy.cpd.offlineApps", true); // Offline Website Data
lockPref("privacy.cpd.passwords", false); // this is not listed
lockPref("privacy.cpd.sessions", true); // Active Logins
lockPref("privacy.cpd.siteSettings", false); // Site Preferences
lockPref("privacy.sanitize.timeSpan", 0);
lockPref("_user.js.parrot", "4000 syntax error: the parrot's pegged out");
lockPref("privacy.firstparty.isolate", true);
lockPref("_user.js.parrot", "4500 syntax error: the parrot's popped 'is clogs");
lockPref("privacy.resistFingerprinting", true);
lockPref("privacy.resistFingerprinting.block_mozAddonManager", true);
lockPref("privacy.resistFingerprinting.letterboxing", true);
lockPref("browser.startup.blankWindow", false);
lockPref("ui.prefersReducedMotion", 1);